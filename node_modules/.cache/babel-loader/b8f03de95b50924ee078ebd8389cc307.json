{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/praful/Documents/webapp/frontend/src/components/Paginate.js\";\nimport React from 'react'; // import { Pagination } from 'react-bootstrap';\n\nimport Pagination from 'react-js-pagination'; // import { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({\n  pages,\n  page,\n  updatePage\n}) => {\n  return pages > 1 &&\n  /*#__PURE__*/\n  // <Pagination>\n  //   {[...Array(Number(page) + 9).keys(), '...', Number(pages)].map(x => (\n  //     <LinkContainer onClick={updatePage} key={x + 1} to={keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`}>\n  //       <Pagination.Item active={x + 1 === page}>\n  //         {x + 1}\n  //       </Pagination.Item>\n  //     </LinkContainer>\n  //   ))}\n  // </Pagination>\n  _jsxDEV(Pagination, {\n    pageRangeDisplayed: 10,\n    activePage: page,\n    itemsCountPerPage: 20,\n    totalItemsCount: pages,\n    onChange: updatePage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Paginate;\nexport default Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/Users/praful/Documents/webapp/frontend/src/components/Paginate.js"],"names":["React","Pagination","Paginate","pages","page","updatePage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAAiC;AAChD,SAAOF,KAAK,GAAG,CAAR;AAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAC,UAAD;AACE,IAAA,kBAAkB,EAAE,EADtB;AAEE,IAAA,UAAU,EAAEC,IAFd;AAGE,IAAA,iBAAiB,EAAE,EAHrB;AAIE,IAAA,eAAe,EAAED,KAJnB;AAKE,IAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,UAVF;AAkBD,CAnBD;;KAAMH,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n// import { Pagination } from 'react-bootstrap';\nimport Pagination from 'react-js-pagination';\n// import { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, updatePage }) => {\n  return pages > 1 && (\n    // <Pagination>\n    //   {[...Array(Number(page) + 9).keys(), '...', Number(pages)].map(x => (\n    //     <LinkContainer onClick={updatePage} key={x + 1} to={keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`}>\n    //       <Pagination.Item active={x + 1 === page}>\n    //         {x + 1}\n    //       </Pagination.Item>\n    //     </LinkContainer>\n    //   ))}\n    // </Pagination>\n    <Pagination\n      pageRangeDisplayed={10}\n      activePage={page}\n      itemsCountPerPage={20}\n      totalItemsCount={pages}\n      onChange={updatePage}\n    />\n  );\n};\n\nexport default Paginate;\n"]},"metadata":{},"sourceType":"module"}